{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"2 ML SVM Demo","provenance":[{"file_id":"1F7wk145nQr2Z5jJs5EQNj1txwzIaehvL","timestamp":1599037161883}],"collapsed_sections":[],"toc_visible":true,"authorship_tag":"ABX9TyOBSYv29GWVoA2PO9tjIMV6"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"Cmi-w39WWImn","colab_type":"text"},"source":["# Support Vector Machine\n"]},{"cell_type":"markdown","metadata":{"id":"3F_1Cg3YbzOm","colab_type":"text"},"source":["## Importing the data\n","Lets start by importing the required packages"]},{"cell_type":"code","metadata":{"id":"b_mNw5ATV89v","colab_type":"code","colab":{}},"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn import svm \n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DuMsbIhYW8Rd","colab_type":"text"},"source":["And now we load our data, this case the mnist dataset"]},{"cell_type":"code","metadata":{"id":"E1nyCRPrXDeq","colab_type":"code","colab":{}},"source":["mnist_train = np.loadtxt('sample_data/mnist_train_small.csv', delimiter=',', dtype=int)\n","x_train, y_train = mnist_train[1:], mnist_train[0]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"9iSoHB0xX97p","colab_type":"text"},"source":["Lets check that we have the right results "]},{"cell_type":"code","metadata":{"id":"uCuO9chGYC5p","colab_type":"code","colab":{}},"source":["print(f\"Mnist train label shape: {y_train.shape}\")\n","print(f\"Mnist train data shape: {x_train.shape}\")\n","print('So why is this wrong??')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"1Mg0pd_JYktZ","colab_type":"text"},"source":["## Fixing the data"]},{"cell_type":"code","metadata":{"id":"IskzyCWWYyqC","colab_type":"code","colab":{}},"source":["x_train, y_train = mnist_train[:, 1:], mnist_train[:, 0]\n","print(f\"Mnist train label shape: {y_train.shape}\")\n","print(f\"Mnist train data shape: {x_train.shape}\")"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"bqRZopjjbh09","colab_type":"text"},"source":["Now that looks right!\n","\n","Lets import the test data aswell"]},{"cell_type":"code","metadata":{"id":"pDM4rc7GZKRN","colab_type":"code","colab":{}},"source":["mnist_test = np.loadtxt('sample_data/mnist_test.csv', delimiter=',', dtype=int)\n","x_test, y_test = mnist_test[:, 1:], mnist_test[:, 0]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"qisoZeFJcimZ","colab_type":"text"},"source":["Now lest inspect the data"]},{"cell_type":"code","metadata":{"id":"yZccUHtzcm9C","colab_type":"code","colab":{}},"source":["print(f\"Test data 0 is number: {y_test[0]}\")\n","plt.imshow(x_test[0])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"lRMN5CYvd6hH","colab_type":"text"},"source":["What is the problem??"]},{"cell_type":"markdown","metadata":{"id":"xZ4QJhv1d__h","colab_type":"text"},"source":["### Fixing the sub-problem"]},{"cell_type":"code","metadata":{"id":"7NUdRHa4eFU6","colab_type":"code","colab":{}},"source":["x_test_2d = x_test.reshape((-1, 28, 28))\n","x_train_2d = x_train.reshape((-1, 28, 28))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Znga6e6Jeqq8","colab_type":"text"},"source":["Lest inspect again"]},{"cell_type":"code","metadata":{"id":"tZEzBSGvesnx","colab_type":"code","colab":{}},"source":["print(f\"Test data 0 is number: {y_test[0]}\")\n","plt.imshow(x_test_2d[0])\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"EHDihKgie52C","colab_type":"code","colab":{}},"source":["print(f\"Train data 10 is number: {y_train[10]}\")\n","plt.imshow(x_train_2d[10])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"VwmaU_VKe9zI","colab_type":"text"},"source":["## Training the classifier"]},{"cell_type":"markdown","metadata":{"id":"lDle6_QufElS","colab_type":"text"},"source":["Now we are ready to work with the data"]},{"cell_type":"code","metadata":{"id":"Apk0Wve2e9DK","colab_type":"code","colab":{}},"source":["# Create the classifier\n","classifier = svm.SVC(gamma=0.001, verbose=1, max_iter=10)\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Wq8PW_7uhk1N","colab_type":"text"},"source":["Lets try to train it"]},{"cell_type":"code","metadata":{"id":"rsQot6IMhom0","colab_type":"code","colab":{}},"source":["classifier.fit(x_train_2d, y_train)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zBeWA5nhi01o","colab_type":"text"},"source":["Oh no, SVM only takes format (Sample, Data). \n","\n","Lets try with the non formated data"]},{"cell_type":"code","metadata":{"id":"Lqo03ySoi-OQ","colab_type":"code","colab":{}},"source":["classifier.fit(x_train, y_train)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xeB3wAWFoH0C","colab_type":"text"},"source":["It has trained for 10 iter lets test it"]},{"cell_type":"code","metadata":{"id":"hsUTUINdoKzB","colab_type":"code","colab":{}},"source":["classifier.score(x_test, y_test)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"38MAHrzoorUm","colab_type":"text"},"source":["How good is this??"]},{"cell_type":"code","metadata":{"id":"AVYhNeLGotcC","colab_type":"code","colab":{}},"source":["classifier = svm.SVC(gamma=0.001, verbose=1, max_iter=100)\n","classifier.fit(x_train, y_train)\n","classifier.score(x_test, y_test)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"tJWaDSKmpE6I","colab_type":"text"},"source":["Is this better? \n","\n","The time is a major problem in Machine Learning trask"]},{"cell_type":"markdown","metadata":{"id":"z7VWkPNWQhBe","colab_type":"text"},"source":["# KNN"]},{"cell_type":"code","metadata":{"id":"wKLY84HoQfi1","colab_type":"code","colab":{}},"source":["from sklearn import neighbors\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"M0R_51c0RZnF","colab_type":"text"},"source":["We use the same data and make knn with 5 as k"]},{"cell_type":"code","metadata":{"id":"7G1Z7tARRgj-","colab_type":"code","colab":{}},"source":["classifier_knn = neighbors.KNeighborsClassifier(n_neighbors=5)\n","classifier_knn.fit(x_train, y_train)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ULLbtDAnSTpB","colab_type":"text"},"source":["Now lets test it.  "]},{"cell_type":"code","metadata":{"id":"Ass3dXBYSMv2","colab_type":"code","colab":{}},"source":["classifier_knn.score(x_test[:1000], y_test[:1000])"],"execution_count":null,"outputs":[]}]}